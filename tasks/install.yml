---
- name: Import assert.yml
  ansible.builtin.import_tasks: assert.yml
  run_once: true
  delegate_to: localhost

- name: Install required packages
  ansible.builtin.package:
    name: "{{ grub_packages }}"
    state: present

- name: "Set GRUB_TIMEOUT"
  ansible.builtin.lineinfile:
    path: /etc/default/grub
    line: GRUB_TIMEOUT={{ grub_timeout }}
    create: true
    mode: "0664"
  notify:
    - Update grub

- name: "Set GRUB_RECORDFAIL_TIMEOUT"
  ansible.builtin.lineinfile:
    path: /etc/default/grub
    line: GRUB_RECORDFAIL_TIMEOUT={{ grub_recordfail_timeout }}
    create: true
    mode: "0664"
  notify:
    - Update grub

- name: "Replace all options to GRUB_CMDLINE_LINUX"
  ansible.builtin.replace:
    path: /etc/default/grub
    regexp: '^GRUB_CMDLINE_LINUX='
    replace: 'GRUB_CMDLINE_LINUX="{{ grub_cmdline }}"'
    validate: /bin/sh %s
    mode: "0664"
  notify:
    - Update grub
  when:
    - grub_cmdline is defined
    - grub_cmdline | length > 0

- name: "Add options to GRUB_CMDLINE_LINUX"
  ansible.builtin.replace:
    path: /etc/default/grub
    regexp: '^GRUB_CMDLINE_LINUX="((:?(?!{{ item.option }}={{ item.value }}).)*?)"$'
    replace: 'GRUB_CMDLINE_LINUX="\1 {{ item.option }}={{ item.value }}"'
    validate: /bin/sh %s
    mode: "0664"
  loop: "{{ grub_add_cmdline }}"
  loop_control:
    label: "{{ item.option }}"
  notify:
    - Update grub
  when:
    - grub_add_cmdline is defined
    - grub_add_cmdline | length > 0

- name: "Add content on grud.d config files"
  ansible.builtin.blockinfile:
    path: "/etc/grub.d/{{ item.file }}"
    block: "{{ item.value }}"
    create: true
    mode: "0664"
  #no_log: true
  notify:
    - Update grub
  with_items:
    - "{{ grub_add_filed }}"
  when:
    - grub_add_filed is defined
    - grub_add_filed | length > 0
    - item.regex is not defined

- name: "Change content on grud.d config files"
  ansible.builtin.replace:
    path: "/etc/grub.d/{{ item.file }}"
    regexp: '^{{ item.regex }}"((:?(?!{{ item.value }}).)*?)"$'
    replace: '{{ item.regex }}"\1 {{ item.value }}"'
  notify:
    - Update grub
  with_items:
    - "{{ grub_add_filed }}"
  when:
    - grub_add_filed is defined
    - grub_add_filed | length > 0
    - item.regex is defined

- name: "Reboot"
  ansible.builtin.reboot:
  when:
    - grub_reboot|bool

- name: "Flush handlers"
  ansible.builtin.meta: flush_handlers
